services:
  postgres:
    image: postgres:14
    container_name: postgres_user_service
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  user-service:
    build:
      context: .
    container_name: user-service
    depends_on:
      - postgres
      - loki
      - jaeger
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/users_db
      - LOGGING_LOKI_URL=http://loki:3100/loki/api/v1/push
      - JAEGER_AGENT_HOST=http://jaeger:6831
    ports:
      - "8002:8002"
    restart: always

  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    ports:
      - "16686:16686" # Jaeger UI
      - "6831:6831/udp" # Tracing port
      - "6832:6832/udp" # Tracing port
      - "14250:14250" # Collector port
      - "14268:14268"
      - "5778:5778"
      - "9411:9411"
      - "5775:5775"
    restart: always

  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"
    # command: -config.file=/etc/loki/local-config.yaml
    # volumes:
    #   - ./loki-config.yaml:/etc/loki/local-config.yaml
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - loki
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
    restart: always

volumes:
  postgres_data:
  grafana_data:

# networks:
#   user_service_network:
#     driver: bridge
